; ==============================
; Assembly Code Generated By CuteASM
; Time: 2025-07-22 12:59:48
; Architecture: x86_64
; OS: linux
; ==============================

section .data; 
section .text; 
; ==============================
; Function:test.hiMyLang2
test.hiMyLang2:
    PUSH RBP
    MOV RBP, RSP
    SUB RSP, 8
    MOV RBX, 
    ADD RBX, 3
    MOV RAX, RBX
    CMP RAX, 6666
    if_1:
        ADD sp, 16
        POP bp
        RET
    end_if_1:
        MOV DWORD[ebp-8], 123
        CMP 123, RAX
    if_2:
        MOV DWORD[ebp-8], 9
    else_if_2:
        MOV DWORD[ebp-8], 10
    end_if_2:
        ADD sp, 16
        POP bp
        RET

; Function End:test.hiMyLang2
; ==============================

; ==============================
; Function:test.hiFn2
test.hiFn2:
    PUSH RBP
    MOV RBP, RSP
    PUSH bp
    MOV bp, sp
    SUB sp, 16
    MOV , 9
    MOV , 78
    CALL test.hiMyLang2
    MOV , 5
    MOV , 6
    MOV else_if_3, 1
    if_3:
        MOV , 0
    else_if_3:
        MOV , 10
    end_if_3:
        CMP RAX, 0
    if_4:
        MOV , 9
    else_if_4:
        ADD sp, 16
        POP bp
        RET
    end_if_4:
        CMP RAX, 0
    if_5:
        MOV , 9
    end_if_5:
        ADD sp, 16
        POP bp
        RET

; Function End:test.hiFn2
; ==============================

; ==============================
; Function:test.print0
test.print0:
    PUSH RBP
    MOV RBP, RSP
    PUSH bp
    MOV bp, sp
    SUB sp, 4
    PUSH 
    CALL GetStdHandle@1
    PUSH 0
    PUSH 0
    PUSH messageLen
    PUSH message
    PUSH RAX
    CALL WriteFile
    XOR RAX, RAX
    ADD sp, 4
    POP bp
    RET

; Function End:test.print0
; ==============================

; ==============================
; Function:test.main0
test.main0:
    PUSH RBP
    MOV RBP, RSP
    PUSH bp
    MOV bp, sp
    SUB sp, 12
    MOV , 1
    MOV , 100
    CALL test.hiFn2
    CALL test.print0
    ADD sp, 12
    POP bp
    RET

; Function End:test.main0
; ==============================

; ==============================
; Function:main
main:
    PUSH RBP
    MOV RBP, RSP
    CALL test.main0()
    RET

; Function End:main
; ==============================

